---
- name: get security group
  ec2_group_facts:
    region: "{{ aws.common.region }}"
    filters:
      "tag:Name": "{{ aws.vpc.security_group.name }}"
  register: ec2_group_facts
  check_mode: no

- name: get subnet01
  ec2_vpc_subnet_facts:
    region: "{{ aws.common.region }}"
    filters:
      "tag:Name": "{{ aws.vpc.pubsubnet.subnet01.tags.Name }}"
  register: ec2_public_subnet01_facts
  check_mode: no

- name: get subnet02
  ec2_vpc_subnet_facts:
    region: "{{ aws.common.region }}"
    filters:
      "tag:Name": "{{ aws.vpc.pubsubnet.subnet02.tags.Name }}"
  register: ec2_public_subnet02_facts
  check_mode: no

- name: Get the ubuntu trusty AMI
  ec2_ami_search: distro=ubuntu release=trusty region=ap-northeast-1 virt=hvm
  register: ubuntu_image

- name: Provision a set of instance
  ec2:
    key_name: "{{ my_vars.ec2.key_name }}"
    group_id: "{{ ec2_group_facts.security_groups[0].group_id }}"
    vpc_subnet_id: "{{ ec2_public_subnet01_facts.subnets[0].id }}"
    assign_public_ip: yes
    instance_type: "{{ aws.ec2.instance_type }}"
    region: "{{ aws.common.region }}"
    image: "{{ ubuntu_image.ami }}"
    wait: yes
    wait_timeout: 300
    count_tag:
      Name: "{{ aws.ec2.name + item }}"
    exact_count: 1
    instance_tags:
      Name: "{{ aws.ec2.name + item }}"
      Role: "{{ aws.ec2.role }}"
  with_sequence: count="{{ aws.ec2.instance_count}}"
  register: ec2

